

import java.rmi.Naming;
import java.rmi.Remote;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.List;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;

public class ClientConnect
{
	public static void main (String[] args) throws MalformedURLException, RemoteException, NotBoundException
	{
		try {
				new ClientConnect().launch();
			}
	  catch (IOException e) 
			{
				e.printStackTrace();
			}	
	}

	
	public void launch() throws NotBoundException, IOException
	{
		//cast the returned service to ServerManager Object
		ServerManager serverConnect = initialConnect();	
	
	
	 
		
		System.out.println("quiz 1 = " + serverConnect.getQuizFromID(1).getQuizName());
		
		
		String quest = null; 
	    String ansOne = null; 
	    String ansTwo = null; 
		String ansThree = null; 
		String correctAns = null;
	    int answer = 0;
		
	    
	    String qName = readLineViaBuffer("Please Enter a Name for your Quiz: ");	    
		String qAmount = readLineViaBuffer("Please Enter quantity of Questions: ");
	    int quantOfQuestions = Integer.parseInt(qAmount);	    
	    
		int returnedID = serverConnect .addNewQuiz(qName, quantOfQuestions);
	    
	    Quiz tempQuiz = serverConnect.getQuizFromID(returnedID);
	    
	    //QuizImpl quiz1 = new QuizImpl(qName, quantOfQuestions);
	    
	    
		
		for (int i = 0; i < quantOfQuestions; i++)
		{
			System.out.println("Question: " + (i + 1));
			quest = readLineViaBuffer("Please Enter a Question: ");
		 	ansOne = readLineViaBuffer("Please Enter 1st Answer: ");
		   	ansTwo = readLineViaBuffer("Please Enter 2nd Answer: ");
		  	ansThree = readLineViaBuffer("Please Enter 3rd Answer: ");
			correctAns = readLineViaBuffer("Please Enter which is the correct Answer: 1,2, or 3: ");
		    answer = Integer.parseInt(correctAns);
		    Question questTemp = new Question(quest, ansOne, ansTwo, ansThree, answer);
		    serverConnect.addQuestionToQuiz(tempQuiz, questTemp);
		}
		
		
		List<Question> temp = tempQuiz.getQuestions();
		
		
		for (int j= 0; j< temp.size(); j++)
		{
			System.out.println("Question " + (j+1) + ": ");
			System.out.println(temp.get(j).getQuestion());
		}
		
		int num = temp.get(0).getCorrectAnswer();
		String[] answers = temp.get(0).getAnswers();
		System.out.println("Corrrect Answer is: " + num);
		System.out.println("Answer is: " + answers[num-1]);


	
	
	//Saves repeating the request for input - requires the instructions of what your are asked to type
	//require the throws IOException to allow buffer reader to work 

	
		/*
		//cast the returned service to TestService Object
		TestService echoService = service; 
		//Remote echoService = (TestService) service; 
		
		//calls method on server and returns the set word
		String receivedWord = echoService.returnWord();		
		
		//send STR and return same string and place in receivedEcho string
		String receivedEcho = echoService.echo(str);	
		
		System.out.println("Server: " + receivedWord);
		System.out.println("Word Sent and recieved: " + receivedEcho);	
		
		//System.out.println("Returned word from Server: " + receivedEcho + " Mike says: " + receivedWord);
		
		System.out.print("Insert Your Name: ");
		String tempName = System.console().readLine();
		
		service.createNewPlayer(tempName);		
		
		System.out.println("Players on Server list: ");
		ArrayList<Player> playerList = service.getPlayers();
		for (int i=0; i<playerList.size(); i++)
		{
			Player temp = playerList.get(i);
			System.out.println("ID: "	+ temp.getId());
			System.out.println("Name: "+ temp.getName());
			System.out.println("Score: " + temp.getScore());
		}
		*/
	}

	public ServerManager initialConnect() throws MalformedURLException, RemoteException, NotBoundException
	{
		
		System.out.print("Insert word to Send: ");
		String str = System.console().readLine();
		
		System.out.print("Insert IP: ");
		String ip = System.console().readLine();
		
		System.out.print("Insert Port: ");
		String port = System.console().readLine();		
	
		System.out.println("Looking up " + "//"+ip+":"+port +"/echo");
		
		ServerManager service = (ServerManager)Naming.lookup("//"+ip+":"+port +"/echo");
		System.out.println("Looked up " + "//"+ip+":"+port +"/echo");
			
		return service;
	}
	
	
	public String readLineViaBuffer(String instructions) throws IOException  
	{
		BufferedReader br1 = new BufferedReader(new InputStreamReader(System.in));
	    System.out.print(instructions);
	    String stringRead = br1.readLine();				
		return stringRead;
	}
//to run client// java -Djava.security.policy=client.policy EchoClient
}